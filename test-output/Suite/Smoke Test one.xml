<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="37" hostname="LTIN486222" failures="0" tests="14" name="Smoke Test one" time="72.752" errors="0" timestamp="2024-03-07T15:40:08 IST">
  <testcase classname="testScenarios.DisplayBookshelves" name="@BeforeGroups driverConfig" time="72.548">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=118.0.5993.71)
Build info: version: &amp;apos;4.17.0&amp;apos;, revision: &amp;apos;e52b1be057*&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [09243fa725260e0dcc0a82ce496b9c91, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.71, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64780}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64780/devtoo..., se:cdpVersion: 118.0.5993.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 09243fa725260e0dcc0a82ce496b9c91">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=118.0.5993.71)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [09243fa725260e0dcc0a82ce496b9c91, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.71, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64780}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64780/devtoo..., se:cdpVersion: 118.0.5993.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 09243fa725260e0dcc0a82ce496b9c91
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:592)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1035)
at userDefinedLibraries.DriverSetup.openDriver(DriverSetup.java:95)
at testScenarios.DisplayBookshelves.driverConfig(DisplayBookshelves.java:68)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeGroups driverConfig -->
  <testcase classname="testScenarios.DisplayBookshelves" name="testCaseReadJSON" time="0.0">
    <skipped/>
  </testcase> <!-- testCaseReadJSON -->
  <testcase classname="testScenarios.DisplayBookshelves" name="inputBox" time="0.0">
    <skipped/>
  </testcase> <!-- inputBox -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickSearch" time="0.0">
    <skipped/>
  </testcase> <!-- clickSearch -->
  <testcase classname="testScenarios.DisplayBookshelves" name="popupclose" time="0.0">
    <skipped/>
  </testcase> <!-- popupclose -->
  <testcase classname="testScenarios.DisplayBookshelves" name="scroll" time="0.0">
    <skipped/>
  </testcase> <!-- scroll -->
  <testcase classname="testScenarios.DisplayBookshelves" name="hoverCategory" time="0.0">
    <skipped/>
  </testcase> <!-- hoverCategory -->
  <testcase classname="testScenarios.DisplayBookshelves" name="selectCategory" time="0.0">
    <skipped/>
  </testcase> <!-- selectCategory -->
  <testcase classname="testScenarios.DisplayBookshelves" name="hoverPrice" time="0.0">
    <skipped/>
  </testcase> <!-- hoverPrice -->
  <testcase classname="testScenarios.DisplayBookshelves" name="slidePrice" time="0.0">
    <skipped/>
  </testcase> <!-- slidePrice -->
  <testcase classname="testScenarios.DisplayBookshelves" name="hoverSort" time="0.0">
    <skipped/>
  </testcase> <!-- hoverSort -->
  <testcase classname="testScenarios.DisplayBookshelves" name="inStockSelction" time="0.0">
    <skipped/>
  </testcase> <!-- inStockSelction -->
  <testcase classname="testScenarios.DisplayBookshelves" name="collectingBookShelvesList" time="0.0">
    <skipped/>
  </testcase> <!-- collectingBookShelvesList -->
  <testcase classname="testScenarios.DisplayBookshelves" name="displayingBookShelves" time="0.0">
    <skipped/>
  </testcase> <!-- displayingBookShelves -->
  <testcase classname="testScenarios.DisplayBookshelves" name="screenShotOfBookShelves" time="0.0">
    <skipped/>
  </testcase> <!-- screenShotOfBookShelves -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterMessage" time="0.0">
    <ignored/>
  </testcase> <!-- enterMessage -->
  <testcase classname="testScenarios.DisplayBookshelves" name="screenShotOfErrorMessage" time="0.0">
    <ignored/>
  </testcase> <!-- screenShotOfErrorMessage -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmcustomerPinCode" time="0.0">
    <ignored/>
  </testcase> <!-- confirmcustomerPinCode -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmcustomerCity" time="0.0">
    <ignored/>
  </testcase> <!-- confirmcustomerCity -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterRecipientMobile" time="0.0">
    <ignored/>
  </testcase> <!-- enterRecipientMobile -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterCustomerEmail" time="0.0">
    <ignored/>
  </testcase> <!-- enterCustomerEmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enteringAmount" time="0.0">
    <ignored/>
  </testcase> <!-- enteringAmount -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmcustomerEmail" time="0.0">
    <ignored/>
  </testcase> <!-- confirmcustomerEmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="scrollUp" time="0.0">
    <ignored/>
  </testcase> <!-- scrollUp -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterCorrectDeatils" time="0.0">
    <ignored/>
  </testcase> <!-- enterCorrectDeatils -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickOnBirthdayOrAnniversary" time="0.0">
    <ignored/>
  </testcase> <!-- clickOnBirthdayOrAnniversary -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterPinofCustomerPin" time="0.0">
    <ignored/>
  </testcase> <!-- enterPinofCustomerPin -->
  <testcase classname="testScenarios.DisplayBookshelves" name="displayErrorMessage" time="0.0">
    <ignored/>
  </testcase> <!-- displayErrorMessage -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmrecipientEmail" time="0.0">
    <ignored/>
  </testcase> <!-- confirmrecipientEmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clearrecipientmail" time="0.0">
    <ignored/>
  </testcase> <!-- clearrecipientmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="hoverLiving" time="0.0">
    <ignored/>
  </testcase> <!-- hoverLiving -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmrecipientMobile" time="0.0">
    <ignored/>
  </testcase> <!-- confirmrecipientMobile -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterCustomerMobileNumber" time="0.0">
    <ignored/>
  </testcase> <!-- enterCustomerMobileNumber -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickConfirmWithcorrectEmail" time="0.0">
    <ignored/>
  </testcase> <!-- clickConfirmWithcorrectEmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickOnConfirm" time="0.0">
    <ignored/>
  </testcase> <!-- clickOnConfirm -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmrecipientName" time="0.0">
    <ignored/>
  </testcase> <!-- confirmrecipientName -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmamountEnetered" time="0.0">
    <ignored/>
  </testcase> <!-- confirmamountEnetered -->
  <testcase classname="testScenarios.DisplayBookshelves" name="listOFseatingAndChairExcel" time="0.0">
    <ignored/>
  </testcase> <!-- listOFseatingAndChairExcel -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickOnNext" time="0.0">
    <ignored/>
  </testcase> <!-- clickOnNext -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterCustomerName" time="0.0">
    <ignored/>
  </testcase> <!-- enterCustomerName -->
  <testcase classname="testScenarios.DisplayBookshelves" name="waitForSubmenuToAppear" time="0.0">
    <ignored/>
  </testcase> <!-- waitForSubmenuToAppear -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmcustomerMobile" time="0.0">
    <ignored/>
  </testcase> <!-- confirmcustomerMobile -->
  <testcase classname="testScenarios.DisplayBookshelves" name="clickOnGiftCard" time="0.0">
    <ignored/>
  </testcase> <!-- clickOnGiftCard -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmDetailsPage" time="0.0">
    <ignored/>
  </testcase> <!-- confirmDetailsPage -->
  <testcase classname="testScenarios.DisplayBookshelves" name="waitForGiftCardVisibility" time="0.0">
    <ignored/>
  </testcase> <!-- waitForGiftCardVisibility -->
  <testcase classname="testScenarios.DisplayBookshelves" name="displaySubMenuSeatingandChair" time="0.0">
    <ignored/>
  </testcase> <!-- displaySubMenuSeatingandChair -->
  <testcase classname="testScenarios.DisplayBookshelves" name="confirmcustomerName" time="0.0">
    <ignored/>
  </testcase> <!-- confirmcustomerName -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterRecipientEmail" time="0.0">
    <ignored/>
  </testcase> <!-- enterRecipientEmail -->
  <testcase classname="testScenarios.DisplayBookshelves" name="screenShotOfByAtLiving" time="0.0">
    <ignored/>
  </testcase> <!-- screenShotOfByAtLiving -->
  <testcase classname="testScenarios.DisplayBookshelves" name="screenShotOfconfirmationPage" time="0.0">
    <ignored/>
  </testcase> <!-- screenShotOfconfirmationPage -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterAddressofCustomer" time="0.0">
    <ignored/>
  </testcase> <!-- enterAddressofCustomer -->
  <testcase classname="testScenarios.DisplayBookshelves" name="enterRecipientName" time="0.0">
    <ignored/>
  </testcase> <!-- enterRecipientName -->
</testsuite> <!-- Smoke Test one -->
